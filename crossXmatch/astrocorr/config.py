import utils_mockUniv as utils

cat_params = {'DES':{'name':'DES',
                     'id_col':'coadd_object_id',
                     'coord_cols':['alphawin_j2000', 'deltawin_j2000'],
                     'poserr_cols':['Pos_error'],
                     'poserr_type':'circle',
                     'mag_cols':['mag_auto_g', 'mag_auto_r', 'mag_auto_i', 'mag_auto_z', 'mag_auto_y']},
              'LS':{'name':'LS',
                     'id_col':'ls_id',
                     'coord_cols':['ra', 'dec'],
                     'poserr_cols':['Pos_error'],
                     'poserr_type':'circle',
                     'mag_cols':['mag_g', 'mag_r', 'mag_z', 'mag_w1', 'mag_w2', 'mag_w3', 'mag_w4']},
              'LS_mara':{'name':'LS',
                     'id_col':'ls_id',
                     'coord_cols':['ra', 'dec'],
                     'poserr_cols':['Pos_error'],
                     'poserr_type':'circle',
                     'mag_cols':['mag_g', 'mag_r', 'mag_z', 'mag_w1', 'mag_w2', 'mag_w3', 'mag_w4']},
              'VHS':{'name':'VHS',
                     'id_col':'sourceid',
                     'coord_cols':['ra2000', 'dec2000'],
                     'poserr_cols':['Pos_error'],
                     'poserr_type':'circle',
                     'mag_cols':['hpetromag', 'jpetromag', 'kspetromag', 'ypetromag']},
             }
QSO_cat_params = {'sdss':{'coord_cols':['RA_ICRS', 'DE_ICRS'],
                          'id_col':'SRCLIST',
                          'mag':'rmag'}, 
                  'gaia':{'coord_cols':['RA', 'DEC'],
                          'id_col':'Gaia_sourceid',
                          'mag':'G'},
                  'mqso':{'coord_cols':['RA', 'DEC'],
                          'id_col':'id',
                          'mag':'RMAG'},
                  'LS':{'id_col':'ls_id',
                        'coord_cols':['ra', 'dec'],
                        'mag':['mag_r']},
                  }

allowed_cols_optCat = { 'DES': [ 'coadd_object_id', 'ALPHAWIN_J2000' ,'DELTAWIN_J2000', 
                                 'ebv_sfd98', 'mag_auto_g', 'mag_auto_r', 'mag_auto_i', 
                                 'mag_auto_z', 'm.mag_auto_y', 'm.spread_model_i',
                                 'spreaderr_model_i', 'imaflags_iso_g', 'imaflags_iso_r', 
                                 'imaflags_iso_i', 'imaflags_iso_z', 'imaflags_iso_y', 
                                 'bpz_zmode_mof', 'bpz_zmode_sof', 'bpz_zsigma68_mof', 
                                 'bpz_zsigma68_sof', 'dnf_zmc_mof', 'dnf_zmc_sof' ],
                         'LS': ['release', 'ls_id','brickid', 'objid', 'ra', 'dec', 'ra_ivar', 'dec_ivar', 
                                'glat', 'glon', 'mag_g', 'mag_i', 'mag_r', 'mag_z', 'mag_w1',
                                'mag_w2', 'mag_w3', 'mag_w4', 'dered_flux_g', 'dered_flux_i', 
                                'dered_flux_r', 'dered_flux_z', 'dered_flux_w1', 'dered_flux_w2', 
                                'dered_flux_w3', 'dered_flux_w4', 'snr_g', 'snr_i', 'snr_r',
                                'snr_z', 'snr_w1', 'snr_w2', 'snr_w3', 'snr_w4',
                                'gaia_phot_g_mean_mag', 'gaia_phot_bp_mean_mag', 
                                'gaia_phot_rp_mean_mag', 'gaia_phot_g_mean_flux_over_error',
                                'gaia_phot_bp_mean_flux_over_error', 
                                'gaia_phot_rp_mean_flux_over_error', 'pmra', 'pmra_ivar', 'pmdec', 
                                'pmdec_ivar', 'parallax', 'parallax_ivar', 'ref_epoch', 'type', 
                                'brick_primary', 'LGUID', 'UOBJID_LS'],
                         'LS_mara': ['release', 'brickid', 'brickname', 'objid', 'brick_primary', 'maskbits', 'fitbits', 'type', 'ra_ivar',
                                     'dec_ivar', 'bx', 'by', 'dchisq', 'ebv', 'mjd_min', 'mjd_max', 'ref_cat', 'ref_id', 'pmra', 'pmdec',
                                     'parallax', 'pmra_ivar', 'pmdec_ivar', 'parallax_ivar', 'ref_epoch', 'gaia_phot_g_mean_mag', 
                                     'gaia_phot_g_mean_flux_over_error', 'gaia_phot_g_n_obs', 'gaia_phot_bp_mean_mag', 
                                     'gaia_phot_bp_mean_flux_over_error', 'gaia_phot_bp_n_obs,gaia_phot_rp_mean_mag',
                                     'gaia_phot_rp_mean_flux_over_error', 'gaia_phot_rp_n_obs', 'gaia_phot_variable_flag', 
                                     'gaia_astrometric_excess_noise', 'gaia_astrometric_excess_noise_sig', 'gaia_astrometric_n_obs_al',
                                     'gaia_astrometric_n_good_obs_al', 'gaia_astrometric_weight_al', 'gaia_duplicated_source', 'gaia_a_g_val',
                                     'gaia_e_bp_min_rp_val', 'gaia_phot_bp_rp_excess_factor', 'gaia_astrometric_sigma5d_max',
                                     'gaia_astrometric_params_solved', 'flux_g', 'flux_r', 'flux_i', 'flux_z', 'flux_w1', 'flux_w2', 'flux_w3', 
                                     'flux_w4', 'flux_ivar_g', 'flux_ivar_r', 'flux_ivar_i', 'flux_ivar_z', 'flux_ivar_w1', 'flux_ivar_w2',
                                     'flux_ivar_w3', 'flux_ivar_w4', 'fiberflux_g', 'fiberflux_r', 'fiberflux_i', 'fiberflux_z', 'fibertotflux_g',
                                     'fibertotflux_r', 'fibertotflux_i', 'ibertotflux_z', 'apflux_g', 'apflux_r', 'apflux_i', 'apflux_z',
                                     'apflux_resid_g', 'apflux_resid_r', 'apflux_resid_i', 'apflux_resid_z', 'apflux_blobresid_g', 
                                     'apflux_blobresid_r', 'apflux_blobresid_i', 'apflux_blobresid_z', 'apflux_ivar_g', 'apflux_ivar_r',
                                     'apflux_ivar_i', 'apflux_ivar_z', 'apflux_masked_g', 'apflux_masked_r', 'apflux_masked_i', 'apflux_masked_z',
                                     'apflux_w1', 'apflux_w2', 'apflux_w3', 'apflux_w4', 'apflux_resid_w1', 'apflux_resid_w2', 'apflux_resid_w3',
                                     'apflux_resid_w4', 'apflux_ivar_w1', 'apflux_ivar_w2', 'apflux_ivar_w3', 'apflux_ivar_w4', 
                                     'mw_transmission_g', 'mw_transmission_r', 'mw_transmission_i', 'mw_transmission_z', 'mw_transmission_w1',
                                     'mw_transmission_w2', 'mw_transmission_w3', 'mw_transmission_w4', 'nobs_g', 'nobs_r', 'nobs_i', 'nobs_z',
                                     'nobs_w1', 'nobs_w2', 'nobs_w3', 'nobs_w4', 'rchisq_g', 'rchisq_r', 'rchisq_i', 'rchisq_z', 'rchisq_w1', 
                                     'rchisq_w2', 'rchisq_w3', 'rchisq_w4', 'fracflux_g', 'fracflux_r', 'fracflux_i', 'fracflux_z',
                                     'fracflux_w1', 'fracflux_w2', 'fracflux_w3', 'fracflux_w4', 'fracmasked_g', 'fracmasked_r', 'fracmasked_i', 
                                     'fracmasked_z', 'fracin_g', 'fracin_r', 'fracin_i', 'fracin_z', 'ngood_g', 'ngood_r', 'ngood_i', 'ngood_z', 
                                     'anymask_g', 'anymask_r', 'anymask_i', 'anymask_z', 'allmask_g', 'allmask_r', 'allmask_i', 'allmask_z',
                                     'wisemask_w1', 'wisemask_w2', 'psfsize_g', 'psfsize_r', 'psfsize_i', 'psfsize_z', 'psfdepth_g', 'psfdepth_r',
                                     'psfdepth_i', 'psfdepth_z', 'galdepth_g', 'galdepth_r', 'galdepth_i', 'galdepth_z', 'nea_g', 'nea_r', 'nea_i',
                                     'nea_z', 'blob_nea_g', 'blob_nea_r', 'blob_nea_i', 'blob_nea_z', 'psfdepth_w1', 'psfdepth_w2', 'psfdepth_w3',
                                     'psfdepth_w4', 'wise_coadd_id', 'wise_x', 'wise_y', 'sersic', 'sersic_ivar',
                                     'shape_r', 'shape_r_ivar', 'shape_e1', 'shape_e1_ivar', 'shape_e2', 'shape_e2_ivar'],
                                     #'lc_flux_w1', 'lc_flux_w2', 'lc_flux_ivar_w1',
                                     #'lc_flux_ivar_w2', 'lc_nobs_w1', 'lc_nobs_w2', 'lc_fracflux_w1', 'lc_fracflux_w2', 'lc_rchisq_w1',
                                     #'lc_rchisq_w2', 'lc_mjd_w1', 'lc_mjd_w2', 'lc_epoch_index_w1', 'lc_epoch_index_w2', 
                                     
                         'VHS':[ 'mergedclass', 'psaturated', 'pstar', 'pgalaxy', 'pnoise', 'priorsec', 'primary_source',
                            'hppErrBits',  'jppErrBits', 'ksppErrBits', 'jppErrBits',
                            'hapermag4',   'hapermag4err',  'hapermagnoapercorr4',  'hclass',  'hpetromag',  'hpetromagerr',
                            'japermag4',   'japermag4err',  'japermagnoapercorr4',  'jclass',  'jpetromag',  'jpetromagerr',
                            'yapermag4',   'yapermag4err',  'yapermagnoapercorr4',  'yclass',  'ypetromag',  'ypetromagerr',
                            'ksapermag4',  'ksapermag4err', 'ksapermagnoapercorr4', 'ksclass', 'kspetromag', 'kspetromagerr'],
              }


astrom_error = {'DES':0.1,  #Abbott+18: https://ui.adsabs.harvard.edu/abs/2018ApJS..239...18A/abstract
                'LS':0.03,  #Arjun+19: https://ui.adsabs.harvard.edu/abs/2019AJ....157..168D/abstract
                'VHS':0.15, #https://www.eso.org/rm/api/v1/public/releaseDescriptions/144
                'gaia':0.1, #**CHECK**
                'mqso':0.1  #**CHECK**
                } 

allowed_cols_XMM = ['UXID','PROB_FULL', 'FLUX_FULL',
                           'PROB_SOFT', 'FLUX_SOFT',
                           'PROB_HARD', 'FLUX_HARD' ]

allowed_cols_chandra = ['name', 'Full_prob', 'Full_flux', 'Full_flux_Bay', 
                                'Soft_prob', 'Soft_flux', 'Soft_flux_Bay', 
                                'Hard_prob', 'Hard_flux', 'Hard_flux_Bay']

dct_cat = {'DES': {'name':'DES',
                   'id_col':'coadd_object_id',
                   'coord_cols':['alphawin_j2000', 'deltawin_j2000'],
                   'poserr_cols':['Pos_error'],
                   'poserr_type':'circle',
                   'mag_cols':['mag_auto_g', 'mag_auto_r', 'mag_auto_i', 'mag_auto_z', 'mag_auto_y'],
                   'allowed_cols':[ 'coadd_object_id', 'ALPHAWIN_J2000' ,'DELTAWIN_J2000', 
                                    'ebv_sfd98', 'mag_auto_g', 'mag_auto_r', 'mag_auto_i', 
                                    'mag_auto_z', 'm.mag_auto_y', 'm.spread_model_i',
                                    'spreaderr_model_i', 'imaflags_iso_g', 'imaflags_iso_r', 
                                    'imaflags_iso_i', 'imaflags_iso_z', 'imaflags_iso_y', 
                                    'bpz_zmode_mof', 'bpz_zmode_sof', 'bpz_zsigma68_mof', 
                                    'bpz_zsigma68_sof', 'dnf_zmc_mof', 'dnf_zmc_sof' ],
                   'astrom_error':0.1,  #Abbott+18: https://ui.adsabs.harvard.edu/abs/2018ApJS..239...18A/abstract
              },
           'LS':[],
           'VHS':[],
           'gaia':[],
           'sdss':[],
           
           } 

finterp_dist_redshift = utils._load_table_dist_redshift()
fInterpol_age_z = utils._load_table_z_age()